"
" General settings
"
" Search settings
set incsearch
set hlsearch
set ignorecase
set smartcase
set gdefault

" Clipboard"
set clipboard+=unnamedplus    " use system clipboard
set clipboard+=ideaput        " use idea's pasting logic

set notimeout
set scrolloff=1               " pad scrolling with one line
set showmode                  " show current mode in statusbar
set showcmd                   " show partial command in statusbar
set visualbell                " removes errorbells
set relativenumber number     " show number and relative number
set paste

" Stay in the mode in which the editing started
set idearefactormode=normal
set ideajoin                  " use the IDE's join/J behavior
set selectmode=ideaselection  " use select mode only when IDE sets a selection
set ideastatusicon=gray       " Configures the status icon color for IdeaVim, providing a visual indicator in the IDE.

"
" Plugins
"
set commentary

" ys<motion|text object><desired char>      surround something
" S<desired char>                           surround when in visual mode
" ds<existing char>                         deletes existing surround
" cs<existing char><desired char>           changes existing surround with desired
set surround

set highlightedyank

set argtextobj
let g:argtextobj_pairs="(:),{:},<:>"

set ideavimsupport+=dialog
set ideaenabledbufs+=singleline

set easymotion
let g:EasyMotion_do_mapping = 0
" let g:EasyMotion_smartcase = 1

set quickscope
let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']
let g:qs_primary_color = '#e64553'
let g:qs_secondary_color = '#fe640b'

set NERDTree

"
" Mappings
"

"" Remap space as leader key
let mapleader=" "
map <Leader>rc :source ~/.ideavimrc<CR>

map <C-s> :write<CR>

map s <Plug>(easymotion-jumptoanywhere)

" Use system clipboard by default for y and p operations
nnoremap yy "+yy
vnoremap y "+y
nnoremap p "+p
vnoremap p "+p
nnoremap P "+P
vnoremap P "+P

" Search for selected text
xnoremap * "zy/<C-R>z<CR>
xnoremap # "zy?<C-R>z<CR>

" Clear highlights
nnoremap <C-[> :noh<CR>

" Move text up and down
map <A-j> <Action>(MoveLineDown)
map <A-k> <Action>(MoveLineUp)

""" Indent
map < <<
map > >>
vnoremap < <gv
vnoremap > >gv

""" Source Code Navigation
nmap gi <Action>(GotoImplementation)

nmap <leader><Esc> <Action>(ClearAllNotifications)

" Focus project window
map <leader>e :NERDTreeToggle<CR>

" Searching
nmap ga <Action>(GotoAction)

sethandler <C-p> n:vim i-x:ide
nmap <c-p> <Action>(GotoFile)

nmap / <Action>(Find)
nmap ' <Action>(Replace)
nmap <leader>st <Action>(TextSearchAction)

nmap <leader>g <Action>(FindInPath)
nmap <leader>G <Action>(ReplaceInPath)

" Tab movements
nmap <leader>1 <Action>(GoToTab1)
nmap <leader>2 <Action>(GoToTab2)
nmap <leader>3 <Action>(GoToTab3)
nmap <leader>4 <Action>(GoToTab4)
nmap <leader>5 <Action>(GoToTab5)

" Closing
map q <Action>(CloseContent)
map <C-q> <Action>(Exit)
nmap <leader>A <Action>(CloseAllEditorsButActive)

map <C-.> <Action>(ShowIntentionActions)
map <C-/> <Action>(CommentByLineComment)
map <A-/> <Action>(CommentByBlockComment)
map <leader>f <Action>(ReformatCode)

nmap <C-b> <Action>(Back)
nmap <C-f> <Action>(Forward)

" Moves the cursor to the previous method in the code
nmap [[ <Action>(MethodUp)
nmap ]] <Action>(MethodDown)

nmap <leader>a <Action>(cody.openChat)
imap <C-s> <Action>(cody.acceptAutoCompleteAction)