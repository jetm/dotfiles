source ~/.vimrc

set relativenumber
set number
set ignorecase
set smartcase
set hlsearch
set incsearch
set showmode
set showcmd
set scrolloff=5
set history=1000
set viminfo
set idearefactormode=keep

" In pure vim a timeout on the leader key results in a menu being displayed, hence we have a VERY
" low timeout setting. Since that menu is not available in ideavim, the timeout has to be increased
" in order to have a more realistic chance on hitting key combinations.
set timeout
set timeoutlen=1000

" Copy to system clipboard as well
set clipboard+=unnamed

" https://superuser.com/questions/622898/how-to-turn-off-the-bell-sound-in-intellij
" https://stackoverflow.com/questions/63386803/how-to-turn-off-a-bell-in-intellij-idea
set visualbell

""" 
""" https://github.com/JetBrains/ideavim/wiki/Emulated-plugins
""" 
set quickscope

" ys<motion|text object><desired char>      surround something
" S<desired char>                           surround when in visual mode
" ds<existing char>                         deletes existing surround
" cs<existing char><desired char>           changes existing surround with desired
"set surround

" https://youtrack.jetbrains.com/issue/VIM-1970
set highlightedyank

" https://youtrack.jetbrains.com/issue/VIM-959
"set ideamarks

"set ideajoin

" die dae cie cae
"set textobj-entire

" https://github.com/JetBrains/ideavim/wiki/Emulated-plugins#vim-indent-object
"set textobj-indent

" https://github.com/JetBrains/ideavim/wiki/sethandler
" To be able to say 'same as regular Idea behaviour, but only on insert mode'.

" Same as default IDEA action, but only in insert mode. Enter block-visual
" mode in normal mode.
sethandler <C-v> i:ide

" https://github.com/JetBrains/ideavim/wiki/Select-mode
" set selectmode-=template

" remember set to Vim the following shortcuts
" C-h
" C-l
" C-o
" C-i
" C-v
" C-w Vim uses it to switch windows, the IDE behaviour is mapped to C-k instead
" C-k
" C-m Enter alternative
" C-[ A great Esc key alternative! In the ide, moves caret to code block start.
" C-] Go to definition. In the ide, moves caret to code block end.

" consider NOT assigning to Vim the following shortcuts:
" C-e recent files popup window is very useful
" C-b find occurrences in file popup
" C-u go to super method
" C-q info popup
" C-j We already have j in Vim, better use it for Insert Live Template
" C-n class search

" unsure about assigning to Vim or to IDE
" C-f find or move forward?
" C-r replace or redo?
" C-y
" C-c We already have C-[, don't we?
" C-p kind of not very used without C-n
" C-s doesn't seem very useful in Vim
" C-t update project in IDEA, something something tag stack in Vim
" C-a I don't use it that much in Vim
" C-x same as above

" When pasting text over a selection, do keep the original text in the clipboard. Note, we have a
" similar thing in .vimrc, however the vimrc variant is not supported by ideavim and hence we fall
" back here to the less robust (cursor positioning is inconsistent when doing this at the end of a
" line) version.
"vnoremap p "_dP`]

"""
""" To get a list of Actions run `:actionlist `
"""
" https://github.com/JetBrains/ideavim
" https://github.com/Valloric/dotfiles/blob/master/intellij/ideavimrc
" https://resources.jetbrains.com/storage/products/intellij-idea/docs/IntelliJIDEA_ReferenceCard.pdf
"" Remap space as leader key
let mapleader = " "
"nnoremap <Leader>i :action IdeaVim.ReloadVimRc.reload<CR>

nnoremap Y y$
nnoremap p :action EditorPaste<CR>
nnoremap P :action EditorPaste<CR>
vnoremap p :action EditorPaste<CR>
vnoremap P :action EditorPaste<CR>

" Move text up and down
nnoremap J :action MoveLineDown<CR>
nnoremap K :action MoveLineUp<CR>
vnoremap J :action MoveLineDown<CR>
vnoremap K :action MoveLineUp<CR>

" Smart select/unselect
nmap v <Action>(EditorSelectWord)
vmap v <Action>(EditorSelectWord)

nnoremap <c-s> :write<CR>
nnoremap s :action KJumpAction<CR>

"nnoremap ge :action GotoNextError<CR>
"nnoremap gE :action GotoPreviousError<CR>

""" Editing source code
nnoremap < <<
nnoremap > >>
vnoremap < <gv
vnoremap > >gv
"nnoremap [[ :action MethodUp<CR>
"nnoremap ]] :action MethodDown<CR>
"nnoremap zc :action CollapseRegion<CR>
"nnoremap zo :action ExpandRegion<CR>

""" Navigation
"nnoremap <c-\> :action SplitVertically<CR>
"nnoremap <c--> :action SplitHorizontally<CR>
"nnoremap <c-=> :action Unsplit<CR>
"nnoremap <c-m> :action MoveEditorToOppositeTabGroup<CR>

""" Searching and Source Code Navigation
nnoremap <c-/> :action FindInPath<CR>
nnoremap <c-a> :action GotoAction<CR>
nnoremap <c-p> :action GotoFile<CR>
"nnoremap <leader>s :action GotoRelated<CR>
"nnoremap <leader>h :action CallHierarchy<CR>
"nnoremap <leader>b :action ShowNavBar<CR>
"nnoremap <c-s> :action FileStructurePopup<CR>
"nnoremap <c-o> :action GotoSymbol<CR>
"nnoremap gc :action GotoClass<CR>
nnoremap gu :action FindUsages<CR>
nnoremap gi :action GotoImplementation<CR>
"nnoremap gd :action GotToDeclaration<CR>
"nnoremap gp :action GotToSuperMethod<CR>

nnoremap <Leader>c :action CommentByLineComment<CR>

"nnoremap <s-TAB> :action PreviousTab<CR>
"nnoremap <TAB> :action NextTab<CR>

"nnoremap <Leader>n :action NextWindow<CR>
"nnoremap <Leader>q :action CloseContent<CR>
"nnoremap <Leader>qa :action CloseAllEditors<CR>
"nnoremap <Leader>en :action EditSourceInNewWindow<CR>
"nnoremap <leader>zc :action CollapseAllRegions<CR>
"nnoremap <leader>zo :action ExpandAllRegions<CR>
"nnoremap <leader>r :action Refactorings.QuickListPopupAction<CR>
"nnoremap <Leader>=  :action ReformatCode<CR>
"nnoremap <leader>o :action OptimizeImports<CR>
"nnoremap <leader>l :action RecentLocations<CR>
"nnoremap <leader>h  :action LocalHistory.ShowHistory<CR>