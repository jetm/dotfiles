# shellcheck disable=SC2148
# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
# shellcheck disable=SC2296
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  # shellcheck disable=SC2296
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit id-as'z-a-readurl' light-mode for zdharma-continuum/zinit-annex-readurl
zinit id-as'z-a-as-monitor' light-mode for zdharma-continuum/zinit-annex-as-monitor
zinit id-as'z-a-bin-mod-node' light-mode for zdharma-continuum/zinit-annex-bin-gem-node
zinit id-as'z-a-path-dl' light-mode for zdharma-continuum/zinit-annex-patch-dl
zinit id-as'z-a-rust' light-mode for zdharma-continuum/zinit-annex-rust

### End of Zinit's installer chunk

turbo_source() {
  if [[ -s "$1" && ( ! -s "$1.zwc" || "$1" -nt "$1.zwc" ) ]]; then
    zcompile "$1"
  fi
  source "$1"
}

zi_ice() { zinit ice lucid silent "$@"; }
zi0a() { zi_ice wait'0' "$@"; }
zi0b() { zi_ice wait'1' "$@"; }
zi0c() { zi_ice wait'2' "$@"; }

# Use default installed in the Linux distribution. This version has bugs
# zinit pack="default" for zsh

#
# vi-mode
#
ZVM_VI_SURROUND_BINDKEY=s-prefix
ZVM_LINE_INIT_MODE=$ZVM_MODE_INSERT
zi_ice id-as'zsh-vi-mode' \
  depth=1
zinit light jeffreytse/zsh-vi-mode

#
# Powerlevel10k
#
# Must be run just after zinit
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh
zi_ice id-as'p10k' \
  depth=1
zinit light romkatv/powerlevel10k

zi_ice id-as'fzf-tab'
zinit light Aloxaf/fzf-tab

zi_ice id-as'zsh-autosuggestions'
zinit light zsh-users/zsh-autosuggestions

#
# prezto plugins
#
# zinit internal load prezto module is too slow
zi_ice id-as'prezto' \
  depth=1 \
  cloneonly \
  atpull"%atclone" \
  nocd
zinit light sorin-ionescu/prezto

zi_ice id-as'zsh-defer' \
  depth=1
zinit light romkatv/zsh-defer

zi0b id-as'zsh-history-substring-search' \
  depth=1
zinit light zsh-users/zsh-history-substring-search

zi0b id-as'fzf' \
  from'gh-r' \
  as'program' \
  nocompile \
  bpick'*linux_amd64*' \
  dl'https://raw.githubusercontent.com/junegunn/fzf/master/shell/key-bindings.zsh -> key-bindings.zsh' \
  pick'fzf'
zinit light junegunn/fzf

# export ZPWR_EXPAND_TO_HISTORY=true
zi0b id-as'zsh-expand' \
  depth=1 \
  src"${HOME}/.zsh/zsh-aliases"
zinit light MenkeTechnologies/zsh-expand

# Quicker doing manual initialization
zi0b id-as'zsh-autopair' \
  depth=1 \
  atinit'AUTOPAIR_INHIBIT_INIT=1;'
zinit light hlissner/zsh-autopair

zi0c id-as'zsh-bd' \
  depth=1
zinit light tarrasch/zsh-bd

# zsh-syntax-highlighting is quicker than fast-syntax-highlighting
zi0c id-as'zsh-syntax-highlighting' \
  depth=1 \
  cloneonly \
  atpull'%atclone' \
  nocd
zinit light zsh-users/zsh-syntax-highlighting

zi0c id-as'cht.sh' \
  as'command' \
  has'rlwrap' \
  pick'cht.sh' \
  atload'export CHTSH="$XDG_CONFIG_HOME"'
zinit snippet https://cht.sh/:cht.sh

#
# neovim stable releases
#
zi0c id-as'nvim' \
  ver'v0.9.1' \
  as'program' \
  make"CMAKE_INSTALL_PREFIX=$ZPFX CMAKE_BUILD_TYPE=Release install" \
  bin"$ZPFX/bin/nvim"
zinit light neovim/neovim

zi0c id-as'forgit' \
  depth=1 \
  cloneonly \
  atpull'%atclone' \
  nocd
zinit light wfxr/forgit

zi0c id-as'git-update' \
  as'program' \
  atclone'go get && go build && mv -v gitupdate git-update' \
  atpull'%atclone' \
  pick'git-update'
zinit light nikitavoloboev/gitupdate

zi0c id-as'git-undo' \
  as'program' \
  pick'git-undo'
zinit snippet https://raw.githubusercontent.com/tj/git-extras/master/bin/git-undo

zi0c id-as'checkmake' \
  from'gh-r' \
  as'program' \
  nocompile \
  bpick'*linux.amd64*' \
  mv'checkmake*->checkmake'
zinit light mrtazz/checkmake

# zsh-vi-mode will auto execute this zvm_after_init function
zvm_after_init() {
  # required to read fzf key-bindings after zsh-vi-mode, otherwise they will be
  # overwritten by zsh-vi-mode
  turbo_source "${ZINIT[PLUGINS_DIR]}/fzf/key-bindings.zsh"

  # required to read custom key-bindings, otherwise they will be overwritten by
  # zsh-vi-mode
  turbo_source "${HOME}/.zsh/key-bindings"
}

#
# prezto settings
#
load_prezto_mod() { turbo_source "${ZINIT[PLUGINS_DIR]}/prezto/modules/$1/init.zsh"; }

# Required here before prezto is loaded
zstyle ':prezto:*:*' case-sensitive 'yes'
zstyle ':prezto:*:*' color 'yes'
load_prezto_mod helper
load_prezto_mod environment
load_prezto_mod history
load_prezto_mod utility
# requires utility
load_prezto_mod completion

# zsh-bd
turbo_source "${ZINIT[PLUGINS_DIR]}/zsh-bd/bd.zsh"

# autopair
turbo_source "${ZINIT[PLUGINS_DIR]}/zsh-autopair/autopair.zsh"
autopair-init

# zsh-syntax-highlighting
export ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets pattern cursor)
turbo_source "${ZINIT[PLUGINS_DIR]}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

# forgit
export FORGIT_NO_ALIASES=1
turbo_source "${ZINIT[PLUGINS_DIR]}/forgit/forgit.plugin.sh"

if (command -v keychain >/dev/null 2>&1); then
  if [[ -f "$HOME/.ssh/id_rsa" ]]; then
    zsh-defer eval "$(keychain --eval --quiet --agents ssh id_rsa)"
  fi
fi

# atuin
if (command -v atuin >/dev/null 2>&1); then
  export ATUIN_NOBIND="true"
  zsh-defer eval "$(atuin init zsh --disable-up-arrow --disable-ctrl-r)"
fi

#
# Put most source here to improve zsh load speed
#
# extensions dotfiles
for file in "${HOME}"/.zsh/*.zsh; do
  turbo_source "${file}"
done
unset file

# Source here. It's slower inside of zinit
source "${HOME}"/.p10k.zsh

unset turbo_source
unset load_prezto_mod
unset z_ice
unset zi0a
unset zi0b
unset zi0c

# Alternative to fzf-tab, but less friendly
# zi_ice id-as'fzf-tab-completion' \
#   pick'zsh/fzf-zsh-completion.sh'
# zinit light "lincheney/fzf-tab-completion"

# zi0c id-as'zoxide' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   bpick'*x86_64*linux*' \
#   mv'zoxide*/zoxide -> zoxide' \
#   pick'zoxide' \
#   atload'eval "$(zoxide init zsh --cmd j)";'
# zinit light ajeetdsouza/zoxide

# Git status is still slower than p10k gitstatusd
# zi_ice id-as'starship' \
#   from"gh-r" \
#   as"program" \
#   atload'!eval $(starship init zsh)'
# zinit light starship/starship

# zi_ice id-as'zsh-completions' \
#   atload"zicompinit; zicdreplay" \
#   wait \
#   blockf
# zinit light zsh-users/zsh-completions

# TODO: problem with zsh-autosuggestions
# zstyle ':autocomplete:key-bindings' enabled no
# zi_ice id-as'zsh-autocomplete'
# zinit light marlonrichert/zsh-autocomplete

# if [ ! -f /etc/arch-release ] || [ ! -f /etc/manjaro-release ]; then

  # There is a bug on zinit
  # zinit id-as'git' \
  #   dlink"/git/git/archive/refs/tags/v%VERSION%.zip" \
  #   as'readurl|null' \
  #   atclone"ziextract --move --auto; \
  #     make prefix=$ZPFX USE_LIBPCRE2=1 INSTALL_SYMLINKS=1 \
  #     -j$(nproc) all man install install-man &&
  #     rm -vf $ZPFX/bin/git-shell;
  #     rm -vf $ZPFX/bin/git-cvsserver;
  #     rm -vf $ZPFX/bin/gitk;" \
  #   atpull'%atclone' \
  #   for https://github.com/git/git/tags/

  # look for 70-asdf.zsh configuration file
 #  zi0a id-as'asdf' \
 #    atinit'export ASDF_DATA_DIR="$HOME/.asdf"; \
 #      export ASDF_CONFIG_FILE="$ASDF_DATA_DIR/.asdfrc";'
 #  zinit light asdf-vm/asdf
 #  turbo_source "${ZINIT[PLUGINS_DIR]}/asdf/asdf.sh"
	#
 #  zi0c id-as'topgrade' \
 #    from'gh-r' \
 #    as'program' \
 #    nocompile \
 #    bpick'*x86_64-unknown-linux-musl*' \
 #    pick'topgrade'
 #  zinit light r-darwish/topgrade
	#
 #  zi0c id-as'less' \
 #    ver'v602' \
 #    as'program' \
 #    atclone'make -f Makefile.aut && autoreconf --install &&
 #      ./configure --with-regex=gnu --with-editor=nvim' \
 #    atpull"%atclone" \
 #    make"-j$(nproc)" \
 #    pick'less'
 #  zinit light gwsw/less
	#
 #  zi0c id-as'ov' \
 #    from'gh-r' \
 #    as'program' \
 #    nocompile \
 #    bpick'*linux_amd64*' \
 #    pick'ov'
 #  zinit light noborus/ov
	#
 #  zi0c id-as'clangd' \
 #    from'gh-r' \
 #    as'program'  \
 #    nocompile \
 #    bpick'clangd-linux*' \
 #    mv'clangd*/bin/clangd -> clangd'
	# zinit light clangd/clangd
	#
 #  zinit id-as'git-interactive-rebase-tool' \
 #    as'readurl|null' \
 #    nocompile \
 #    dlink"/MitMaro/git-interactive-rebase-tool/releases/download/%VERSION%/git-interactive-rebase-tool-%VERSION%-ubuntu-16.04_amd64.deb" \
 #    atclone"ziextract --move --auto; \
 #      dpkg -x git-interactive-rebase-tool .; \
 #      mv -vf usr/bin/interactive-rebase-tool $ZPFX/bin;" \
 #    atpull'%atclone' \
 #    for https://github.com/MitMaro/git-interactive-rebase-tool/releases
	#
 #  zi0c id-as'tmux' \
 #    as"program" \
 #    ver"3.3a" \
 #    atclone"./autogen.sh && ./configure && make -j$(nproc)" \
 #    mv"tmux -> /ws/${USER}/shell-goodies/repos/dotfiles/exact_bin/tmux"
 #  zinit light tmux/tmux
	#
 #  zi0c id-as'chezmoi' \
 #    as'program' \
 #    from'gh-r' \
 #    cp'completions/chezmoi.zsh -> _chezmoi'
 #  zinit light twpayne/chezmoi

  #
  # JS Node modules
  #
  # zi0c id-as'node-modules' \
  #   node'bash-language-server' \
  #   sbin'node_modules/.bin/bash-language-server'
  # zinit light zdharma-continuum/null

  # Put here all rust installations
  # looks the mv ice doesn't work with rustup cargo

  # zinit id-as'keychain' \
  #   nocompile \
  #   dlink"/funtoo/keychain/archive/refs/tags/%VERSION%.zip" \
  #   as'readurl|null' \
  #   atclone"ziextract --move --auto; \
  #     install -m755 keychain $ZPFX/bin/" \
  #   atpull'%atclone' \
  #   for https://github.com/funtoo/keychain/releases
# fi

#
# system clipboard
#
# ZSH_SYSTEM_CLIPBOARD_METHOD=tmux
# zi_ice id-as'zsh-system-clipboard' \
#   depth=1
# zinit light kutsan/zsh-system-clipboard

# Help to remember alias
# zi0a id-as'zsh-you-should-use'
# zinit light MichaelAquilina/zsh-you-should-use

# Too slow. Seems has conflict with other plugins
# It brings back live history, even when it's disabled
# zi0a id-as'zsh-autocomplete' \
#   atinit"zstyle ':autocomplete:*' min-delay 0.4; \
#     zstyle ':autocomplete:*' min-input 2; \
#     zstyle ':autocomplete:*' fzf-completion yes; \
#     zstyle ':autocomplete:*' recent-dirs no"
# zinit light marlonrichert/zsh-autocomplete

# Forgot to use it
# zi0a id-as'zsh-thefuck'
# zinit light laggardkernel/zsh-thefuck

# zi0a id-as'zsh-abbrev-alias' \
#   src"${HOME}/.zsh/zsh-aliases"
# zinit light momo-lab/zsh-abbrev-alias

# zsh-expand is quicker than zsh-abbrev-alias, but it has issues expanding 2nd
# command position

#
# Navigation/completion
#
# use `cat -v` to define the map
# Replace by fzf. Conflict with Ctrl-R
# zi0b id-as'history-search-multi-word'
# zinit light zdharma-continuum/history-search-multi-word

# replaced by tmux-fingers
# zi0c id-as'fpp' \
#   from"gh" \
#   as"program" \
#   nocompile \
#   atinit"sed -i 's/python3/python3.7/g' fpp" \
#   pick"fpp"
# zinit light facebook/pathpicker

# zi0c id-as'navi' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   pick'navi' \
#   atload'eval "$(navi widget zsh)";'
# zinit light denisidoro/navi

#
# CLI Highlight & Colors
#
# zi0a id-as'fast-syntax-highlighting'
# zinit light zdharma-continuum/fast-syntax-highlighting

#
# Diff
#
# zi0c id-as'delta' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   bpick'*x86_64-unknown-linux-musl*' \
#   mv'delta*/delta -> delta' \
#   pick'delta'
# zinit light dandavison/delta

#
# Cheatsheet
#
# zi0c id-as'tldr' \
#   from'gh-r' \
#   as'program' \
#   bpick'*linux-x86_64-musl*' \
#   mv'tldr-* -> tldr' \
#   pick'tldr'
# zinit light dbrgn/tealdeer

#
# Shell scripting
#
# Installed by Neovim
# zinit ice rustup id-as'shellharden' \
#   as'program' \
#   cargo'!shellharden'
# zinit light zdharma-continuum/null
#
# Installed by Neovim
# zi0c id-as'shellcheck' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   bpick'*linux.x86_64*' \
#   mv'shellcheck*/shellcheck -> shellcheck' \
#   pick'shellcheck'
# zinit light koalaman/shellcheck
#
# Installed by Neovim
# zi0c id-as'shfmt' \
#   from'gh-r' \
#   nocompile \
#   as'program' \
#   mv'shfmt* -> shfmt'
# zinit light mvdan/sh

#
# File utilities
#
# zi0c id-as'dust' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   bpick'*linux*gnu*' \
#   mv'dust*/dust -> dust' \
#   pick'dust'
# zinit light bootandy/dust

# shim fails for fd
# zi0b id-as'fd' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   mv'fd*/fd -> fd' \
#   pick'fd'
# zinit light sharkdp/fd

# zi0a id-as'exa' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   mv'bin/exa -> exa' \
#   pick'exa'
# zinit light ogham/exa

# shim fails for sd
# zi0c id-as'sd' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   mv'sd-* -> sd' \
#   pick'sd'
# zinit light chmln/sd

# zi0c id-as'sad' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   bpick'*x86_64-unknown-linux-gnu*' \
#   pick'sad'
# zinit light ms-jpq/sad

# zi0c id-as'bat' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   bpick'*x86_64-unknown-linux-musl*' \
#   mv'bat*/bat -> bat' \
#   pick'bat'
# zinit light sharkdp/bat

# zi0c id-as'duf' \
#   from'gh-r' \
#   nocompile \
#   as'program' \
#   bpick'*linux_x86_64.tar.gz'
# zinit light muesli/duf

# zi0c id-as'ouch' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   bpick'*x86_64-unknown-linux-gnu*' \
#   mv'ouch*/ouch -> ouch' \
#   pick'ouch'
# zinit light ouch-org/ouch

# zi0c id-as'erdtree' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   bpick'*x86_64-unknown-linux-gnu*' \
#   pick'erdtree'
# zinit light solidiquis/erdtree

# zi0c id-as'codespelunker' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   bpick'*Linux_x86_64*' \
#   pick'cs'
# zinit light boyter/cs

# zi0c id-as'moar' \
#   as'program' \
#   atclone'go get && go build' \
#   atpull'%atclone' \
#   pick'moar'
# zinit light walles/moar

#
# jq parsing
#
# zi0c id-as'jq' \
#   from'gh-r'  \
#   as'program'  \
#   nocompile \
#   bpick'*linux64' \
#   mv'jq-* -> jq'
# zinit light stedolan/jq
#
# zi0c id-as'fx' \
#   from'gh-r' \
#   as'program' \
#   mv'fx* -> fx'
# zinit light antonmedv/fx

#
# Monitoring
#
# zi0c id-as'htop' \
#   as'program' \
#   ver'3.2.0' \
#   atclone"./autogen.sh && ./configure --enable-delayacct" \
#   atpull"%atclone" \
#   make'htop' \
#   pick'htop'
# zinit light htop-dev/htop

# required gcc 10
#  ver'v1.0.10' \
# zi0c id-as'btop' \
#   as'program' \
#   atclone"make" \
#   make"PREFIX=$ZPFX install"
# zinit light aristocratos/btop

#
# Grepping
#
# zi0c id-as'ripgrep' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   mv'ripgrep*/rg -> rg' \
#   pick'rg'
# zinit light BurntSushi/ripgrep

# zi0c id-as'igrep' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   bpick'*x86_64-unknown-linux-gnu*' \
#   mv'igrep/ig -> ig' \
#   pick'ig'
# zinit light konradsz/igrep

# zi0c id-as'ugrep' \
#   as'program' \
#   atclone"./build.sh --prefix=$ZPFX" \
#   atpull'%atclone' \
#   make'install'
# zinit light Genivia/ugrep

#
# Editor
#

#
# neovim-nightlies
#
# zi0c id-as'nvim' \
#   nocompile \
#   atclone"wget https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz; \
#     unzip -o nvim-linux64.zip; \
#     fd nvim -x rm -vrf {} \; $ZPFX; \
#     tar xvf nvim-linux64.tar.gz --strip-components=1 -C $ZPFX; \
#     rm -f nvim-linux64.zip" \
#   atpull'%atclone'
# zinit light zdharma-continuum/null

# zi0c id-as'glow' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   bpick'*linux_x86_64.tar.gz' \
#   pick'glow'
# zinit light charmbracelet/glow

#
# File managers
#
# zi0c id-as'nnn' \
#   from'gh-r' \
#   as'program'  \
#   nocompile \
#   bpick'nnn-static*x86_64*' \
#   mv'nnn-static -> nnn' \
#   pick'nnn'
# zinit light jarun/nnn

# zi0c id-as'broot' \
#   from'gh-r' \
#   as'program' \
#   pick'build/x86_64-unknown-linux-musl/broot' \
#   ver'latest'
# zinit light Canop/broot

# zi0c id-as'ranger' \
#   from'gh' \
#   as'program' \
#   depth'1' \
#   pick'ranger.py' \
#   atload'alias ranger=ranger.py'
# zinit light ranger/ranger

#
# Build tools
#
# zi0c id-as'ninja' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   bpick'*linux*' \
#   pick'ninja'
# zinit light ninja-build/ninja

#
# Language servers
#
# Installed by Neovim
# zi0c id-as'lua-language-server' \
#   as'program' \
#   atclone"git submodule update --init --recursive; \
#           ninja -C 3rd/luamake -f compile/ninja/linux.ninja; \
#           ./3rd/luamake/luamake rebuild;" \
#   atpull'%atclone'
# zinit light sumneko/lua-language-server

# Installed by Neovim
# zi0c id-as'efm' \
#   from'gh-r' \
#   as'program' \
#   bpick'*linux_amd64*' \
#   mv'*/efm-langserver -> efm-langserver' \
#   pick"efm-langserver"
# zinit light mattn/efm-langserver

#
# Git utilities
#
# zi0c id-as'git-fuzzy' \
#   as'program' \
#   nocompile \
#   pick'bin/git-fuzzy'
# zinit light bigH/git-fuzzy

# zi0c id-as'bugs' \
#   as'program' \
#   nocompile \
#   pick'bugs'
# zinit snippet https://raw.githubusercontent.com/reddit/bugs/main/bugs.sh

# It needs higher Ubuntu v16.04
# zi0c id-as'askgit' \
#   from'gh-r' \
#   as'program' \
#   bpick'*linux-amd64*' \
#   pick'askgit'
# zinit light askgitdev/askgit

# Use backspace \ before $ for SHELL variable
#   nocompile \
# zi0c id-as'tabnine' \
#   atclone"local VER
#     local START_URL
#     local END_URL
#     VER=\$(curl -sS https://update.tabnine.com/bundles/version); \
#     START_URL=https://update.tabnine.com/bundles/; \
#     END_URL=/x86_64-unknown-linux-musl/TabNine.zip; \
#     wget \$START_URL\$VER\$END_URL; \
#     unzip -o TabNine.zip; \
#     rm -vf TabNine.zip
#     chmod -v +x *Tab*; \
#     mv -vf *Tab* /ws/tiamarin/home-cache/local/share/nvim/site/pack/packer/start/coq_nvim/.vars/clients/t9/; \
#     unset VER; \
#     unset START_URL; \
#     unset END_URL" \
#   atpull'%atclone'
# zinit light zdharma-continuum/null

# zi0c id-as'git-reauthor' \
#   as'program' \
#   mv'bin/git-reauthor -> git-reauthor' \
#   pick'git-reauthor'
# zinit snippet https://github.com/tj/git-extras/blob/master/bin/git-reauthor

# zi0c id-as'git-squash' \
#   as'program' \
#   mv'bin/git-squash -> git-squash' \
#   pick'git-squash'
# zinit snippet https://github.com/tj/git-extras/blob/master/bin/git-squash

# zi0c id-as'git-reset-file' \
#   as'program' \
#   mv'bin/git-reset-file -> git-reset-file' \
#   pick'git-reset-file'
# zinit snippet https://github.com/tj/git-extras/blob/master/bin/git-reset-file

# zi0c id-as'git-lfs' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   bpick'*linux-amd64*' \
#   atclone"PREFIX=$ZPFX ./install.sh; \
#     rm -f ./install.sh ./*.md; \
#     mv ./man/*.1 $ZPFX/share/man/man1; \
#     rm -rf ./man"
# zinit light git-lfs/git-lfs

#
# Parallel processing
#
# zinit id-as'parallel' \
#   as'readurl|command' \
#   nocompile \
#   atclone'ziextract --auto --move && ./configure --disable-documentation' \
#   atpull'%atclone' \
#   make'' \
#   pick'src/parallel' \
#   dlink'parallel-latest.tar.bz2' \
#   for https://ftp.gnu.org/gnu/parallel/

# interactive parallel ssh client
# zi0c id-as'hss' \
#   from'gh-r' \
#   nocompile \
#   as'program' \
#   mv'hss-Linux-x86_64 -> hss'
# zinit light six-ddc/hss

# zi0c id-as'task-spooler' \
#   as'program' \
#   ver'cpu-only' \
#   make"PREFIX=$ZPFX -j$(nproc) install"
# zinit light justanhduc/task-spooler

# Use cargo
# Installed by Mason Neovim plugin
# zinit ice rustup id-as'stylua' \
#   as'program' \
#   cargo'!stylua'
# zinit light zdharma-continuum/null

# Installed by Neovim
# zi0c id-as'stylua' \
#   from'gh-r' \
#   as'program' \
#   bpick'*stylua*linux*' \
#   pick'stylua'
# zinit light JohnnyMorganz/StyLua

# Installed by Neovim
# zi0c id-as'stylua' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   bpick'*stylua*linux*' \
#   pick'stylua'
# zinit light JohnnyMorganz/StyLua

# zi0c id-as'gitui' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   bpick'*linux-musl*' \
#   pick'gitui'
# zinit light extrawurst/gitui

# zi0c id-as'direnv' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   pick'direnv' \
#   mv'direnv*->direnv' \
#   atload'eval "$(direnv hook zsh)"'
# zinit light direnv/direnv

# zi_ice id-as'atuin' \
#   from'gh-r' \
#   as'program' \
#   nocompile \
#   sbin"**/atuin"
# zinit light ellie/atuin

# zi0c id-as'difftastic' \
#   cargo'!difftastic'
# zinit light wilfred/difftastic

# zi0c id-as'zeno' \
#   depth"1" \
#   blockf
# zinit light yuki-yano/zeno.zsh

# zi0c id-as'grex' \
#   from'gh-r' \
#   as'program' \
#   bpick'*linux-musl*'
# zinit light pemistahl/grex

# zi0c id-as'hyperfine' \
#   from'gh-r' \
#   as'command' \
#   bpick"$PICK" \
#   pick'hyperfine/hyperfine' \
#   mv'hyperfine* -> hyperfine'
# zinit light sharkdp/hyperfine

# zi0c id-as'lazydoker' \
#   from'gh-r' \
#   as'program' \
#   pick'lazydocker'
# zinit light jesseduffield/lazydocker

# vim:ft=zsh ts=2 sw=2 et:
