#!/bin/sh
#
# Basic dictionary
#
# Most part taken from
# https://github.com/argent0/smallTools/blob/master/my-dict.sh
#
# Features:
#   *   Severe input coercion
#   *   Cache system
#   *   Case insensitive
#   *   Colorized output
#   *   Tru not to store useless data

if (( $# != 1 ))
then
    echo "Please consider providing a word(one) to search."
    exit 1
fi

# severe input coercion
if grep -qe '[^[:alpha:]]' <<< "$1"
then
    echo "Please express your word using letters only."
    exit 1
fi

# only reach here if the input is a word
if [[ -v XDG_CACHE_HOME ]]
then
    cache_dir="$XDG_CACHE_HOME/my-dict"
else
    # you asked for it
    cache_dir="$HOME/.my-dict"
fi

# no errors
mkdir --parents "$cache_dir"

# case insensitive
word=$(tr "A-Z" "a-z" <<< "$1")

data_base_entry="$cache_dir/$word"

# if database entry doesn't exist
if [[ ! -a $data_base_entry ]]
then
    # be carefull
    # create the file first in case we fail at curl
    if ! touch $data_base_entry
    then
        echo "Can't touch file: \"$data_base_entry\"."
        exit 1
    fi

    if ! curl "dict://dict.org/d:$word:*" >> "$data_base_entry"
    then
        # curl failed
        # no errors, because it should exist by now
        rm "$data_base_entry"
        echo "Failed to retrieve definition from dict.org."
        exit 1
    fi

    # what if we didn't find anything?
    # Try not to store useless data
    if grep -q "552 no match" "$data_base_entry"
    then
        # no errors, because it should exist by now
        rm "$data_base_entry"
        echo "No match found. \"$word\""
        exit 1
    fi
fi

grep -i --color -e "$word" -e "^" "$data_base_entry"
